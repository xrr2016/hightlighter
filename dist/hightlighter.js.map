{"version":3,"sources":["../src/hightlighter.js"],"names":["body","document","documentElement","defaultOpts","container","backgroundColor","color","HightLighter","opts","key","hasOwnProperty","bindEvent","window","getSelection","selection","toString","mainContent","innerHTML","selectedText","getSelectedText","markText","replace","addEventListener","hightlight"],"mappings":";;;;;;;;;;AAAA,IAAMA,OAAOC,SAASD,IAAT,IAAiBC,SAASC,eAAT,CAAyBF,IAAvD;;AAEA,IAAMG,cAAc;AAClBC,aAAWJ,IADO;AAElBK,mBAAiB,SAFC;AAGlBC,SAAO;AAHW,CAApB;;IAMMC,Y;AACJ,0BAAuB;AAAA,QAAXC,IAAW,uEAAJ,EAAI;;AAAA;;AACrB,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAK,IAAIC,GAAT,IAAgBN,WAAhB,EAA6B;AAC3B,UAAIA,YAAYO,cAAZ,CAA2BD,GAA3B,KAAmC,KAAKD,IAAL,CAAUC,GAAV,MAAmB,WAA1D,EAAuE;AACrE,aAAKD,IAAL,CAAUC,GAAV,IAAiBN,YAAYM,GAAZ,CAAjB;AACD;AACF;AACD,SAAKE,SAAL,CAAe,KAAKH,IAAL,CAAUJ,SAAzB;AACD;;;;mCAEc;AACb,UAAIQ,OAAOC,YAAX,EAAyB;AACvB,YAAMC,YAAYF,OAAOC,YAAP,GAAsBE,QAAtB,EAAlB;AACA,eAAOD,SAAP;AACD;AACF;;;6BAEQN,I,EAAM;AACb,UAAMQ,cAAcR,KAAKJ,SAAL,CAAea,SAAnC;AACA,UAAMC,eAAe,KAAKC,eAAL,EAArB;AACA,UAAMC,+CAA6CZ,KAAKH,eAAlD,qCAAiGG,KAAKF,KAAtG,WAAiHY,YAAjH,YAAN;AACAV,WAAKJ,SAAL,CAAea,SAAf,GAA2BD,YAAYK,OAAZ,CAAoBH,YAApB,EAAkCE,QAAlC,CAA3B;AACD;;;8BAEShB,S,EAAW;AACnBA,gBAAUkB,gBAAV,CAA2B,SAA3B,EAAsC,KAAKF,QAA3C;AACD;;;;;;AAIH,IAAMG,aAAa,SAAbA,UAAa,CAACf,IAAD,EAAU;AAC3B,SAAO,IAAID,YAAJ,CAAiBC,IAAjB,CAAP;AACD,CAFD;;kBAIee,U","file":"hightlighter.js","sourcesContent":["const body = document.body || document.documentElement.body\r\n\r\nconst defaultOpts = {\r\n  container: body,\r\n  backgroundColor: '#59b9c6',\r\n  color: '#ffffff'\r\n}\r\n\r\nclass HightLighter {\r\n  constructor(opts = {}) {\r\n    this.opts = opts\r\n    for (let key in defaultOpts) {\r\n      if (defaultOpts.hasOwnProperty(key) && this.opts[key] === 'undefined') {\r\n        this.opts[key] = defaultOpts[key]\r\n      }\r\n    }\r\n    this.bindEvent(this.opts.container)\r\n  }\r\n\r\n  getSelection() {\r\n    if (window.getSelection) {\r\n      const selection = window.getSelection().toString()\r\n      return selection\r\n    }\r\n  }\r\n\r\n  markText(opts) {\r\n    const mainContent = opts.container.innerHTML\r\n    const selectedText = this.getSelectedText()\r\n    const markText = `<span style=\"background-color: ${opts.backgroundColor};                     color: ${opts.color};\">${selectedText}</span>`\r\n    opts.container.innerHTML = mainContent.replace(selectedText, markText)\r\n  }\r\n\r\n  bindEvent(container) {\r\n    container.addEventListener('mouseup', this.markText)\r\n  }\r\n\r\n}\r\n\r\nconst hightlight = (opts) => {\r\n  return new HightLighter(opts)\r\n}\r\n\r\nexport default hightlight"]}